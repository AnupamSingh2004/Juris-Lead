name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths: [ 'ipc-justice-aid-backend/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'ipc-justice-aid-backend/**' ]

env:
  AZURE_CONTAINER_APP_NAME: ipc-justice-aid-app
  AZURE_RESOURCE_GROUP: ipc-justice-aid-rg
  AZURE_CONTAINER_REGISTRY: ipcjusticeaidacr.azurecr.io
  IMAGE_NAME: ipc-justice-aid

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./ipc-justice-aid-backend
        file: ./ipc-justice-aid-backend/Dockerfile
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        environmentVariables: |
          DEBUG=False
          SECRET_KEY=secretref:secret-key
          AZURE_APP_SERVICE=True
          DATABASE_NAME=ipc_justice_aid
          DATABASE_USER=secretref:database-user
          DATABASE_PASSWORD=secretref:database-password
          DATABASE_HOST=secretref:database-host
          DATABASE_PORT=5432
          DATABASE_SSL_MODE=require
          REDIS_URL=secretref:redis-url
          CELERY_BROKER_URL=secretref:redis-url
          CELERY_RESULT_BACKEND=secretref:redis-url
          ALLOWED_HOSTS=secretref:allowed-hosts
          CORS_ALLOWED_ORIGINS=secretref:cors-origins
          CSRF_TRUSTED_ORIGINS=secretref:csrf-origins
    
    - name: Verify deployment
      run: |
        # Wait for deployment to complete
        sleep 60
        
        # Get the app URL
        APP_URL=$(az containerapp show \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        
        echo "Application deployed to: https://$APP_URL"
        
        # Basic health check
        curl -f https://$APP_URL/api/v1/health/ || exit 1
        echo "Health check passed!"

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Development Environment
      uses: azure/container-apps-deploy-action@v1
      with:
        containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}-dev
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}-dev
        imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        environmentVariables: |
          DEBUG=True
          SECRET_KEY=secretref:secret-key-dev
          AZURE_APP_SERVICE=True
          DATABASE_NAME=ipc_justice_aid_dev
          DATABASE_USER=secretref:database-user-dev
          DATABASE_PASSWORD=secretref:database-password-dev
          DATABASE_HOST=secretref:database-host-dev
          DATABASE_PORT=5432
          DATABASE_SSL_MODE=require
          REDIS_URL=secretref:redis-url-dev
