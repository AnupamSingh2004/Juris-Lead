# Generated by Django 4.2.7 on 2025-07-31 10:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('case_description', models.TextField()),
                ('incident_date', models.DateField(blank=True, null=True)),
                ('incident_location', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('ai_analysis', models.JSONField(help_text='Analysis from IPC-Helper model')),
                ('ipc_sections_identified', models.JSONField(default=list, help_text='List of IPC sections from AI')),
                ('case_category', models.CharField(help_text='Primary case category from AI', max_length=100)),
                ('urgency_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('contact_method', models.CharField(choices=[('email', 'Temporary Email'), ('telegram', 'Telegram ID'), ('phone', 'Temporary Phone')], default='email', max_length=20)),
                ('contact_value', models.CharField(help_text='Anonymous contact information', max_length=200)),
                ('status', models.CharField(choices=[('new', 'New'), ('published', 'Published'), ('contacted', 'Contacted'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('closed', 'Closed')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(help_text='When this lead expires')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LawyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_council_id', models.CharField(help_text='Bar Council Registration ID', max_length=50, unique=True)),
                ('practice_areas', models.JSONField(default=list, help_text='List of practice areas')),
                ('experience_level', models.CharField(choices=[('junior', '0-2 years'), ('mid', '3-7 years'), ('senior', '8-15 years'), ('expert', '15+ years')], default='junior', max_length=20)),
                ('years_of_experience', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('court_locations', models.JSONField(default=list, help_text='List of courts where they practice')),
                ('firm_name', models.CharField(blank=True, max_length=200, null=True)),
                ('languages_spoken', models.JSONField(default=list, help_text='List of languages')),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('preferred_contact_time', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_complete', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('verification_documents', models.JSONField(default=dict, help_text='Verification document URLs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('pro_bono', 'Pro-Bono (Free)'), ('solo_practitioner', 'Solo Practitioner'), ('small_firm', 'Small Firm'), ('enterprise', 'Enterprise')], default='pro_bono', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('monthly_lead_limit', models.IntegerField(default=5)),
                ('current_month_leads_consumed', models.IntegerField(default=0)),
                ('monthly_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('razorpay_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('last_payment_date', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lawyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='leads.lawyerprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('viewed', 'Viewed'), ('interested', 'Expressed Interest'), ('contacted', 'Contacted Client'), ('accepted', 'Accepted Case'), ('rejected', 'Rejected Case')], default='viewed', max_length=20)),
                ('lawyer_message', models.TextField(blank=True, help_text='Message from lawyer to client')),
                ('client_response', models.TextField(blank=True, help_text='Response from client')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('last_action_at', models.DateTimeField(auto_now=True)),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.lawyerprofile')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.caselead')),
            ],
            options={
                'ordering': ['-last_action_at'],
                'unique_together': {('lead', 'lawyer')},
            },
        ),
        migrations.CreateModel(
            name='LeadAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.IntegerField(default=0)),
                ('unique_lawyer_views', models.IntegerField(default=0)),
                ('interested_lawyers_count', models.IntegerField(default=0)),
                ('contacted_lawyers_count', models.IntegerField(default=0)),
                ('time_to_first_view', models.DurationField(blank=True, null=True)),
                ('time_to_first_contact', models.DurationField(blank=True, null=True)),
                ('time_to_acceptance', models.DurationField(blank=True, null=True)),
                ('lawyer_cities_interested', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='leads.caselead')),
            ],
        ),
        migrations.CreateModel(
            name='LawyerLeadFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_name', models.CharField(max_length=100)),
                ('ipc_sections', models.JSONField(default=list, help_text='Preferred IPC sections')),
                ('case_categories', models.JSONField(default=list, help_text='Preferred case categories')),
                ('cities', models.JSONField(default=list, help_text='Preferred cities')),
                ('urgency_levels', models.JSONField(default=list, help_text='Preferred urgency levels')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('real_time_notifications', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_filters', to='leads.lawyerprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CitizenFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_analysis_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Rating for AI analysis quality')),
                ('lawyer_response_rating', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True)),
                ('overall_experience_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comments', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(default=True)),
                ('improvement_suggestions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='leads.caselead')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='caselead',
            name='assigned_lawyers',
            field=models.ManyToManyField(related_name='assigned_leads', through='leads.LeadAssignment', to='leads.lawyerprofile'),
        ),
        migrations.AddIndex(
            model_name='caselead',
            index=models.Index(fields=['city', 'state'], name='leads_casel_city_bef5f7_idx'),
        ),
        migrations.AddIndex(
            model_name='caselead',
            index=models.Index(fields=['case_category'], name='leads_casel_case_ca_cdd412_idx'),
        ),
        migrations.AddIndex(
            model_name='caselead',
            index=models.Index(fields=['status'], name='leads_casel_status_ef5d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='caselead',
            index=models.Index(fields=['created_at'], name='leads_casel_created_10c52a_idx'),
        ),
    ]
